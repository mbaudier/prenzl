/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_sf_prenzl_adapter_JNIComputation */

#ifndef _Included_net_sf_prenzl_adapter_JNIComputation
#define _Included_net_sf_prenzl_adapter_JNIComputation
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: LIB_NAME */
/*
 * Class:     net_sf_prenzl_adapter_JNIComputation
 * Method:    initRegistry
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_sf_prenzl_adapter_JNIComputation_initRegistry
  (JNIEnv *, jclass);

/*
 * Class:     net_sf_prenzl_adapter_JNIComputation
 * Method:    cleanRegistry
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_sf_prenzl_adapter_JNIComputation_cleanRegistry
  (JNIEnv *, jclass);

/*
 * Class:     net_sf_prenzl_adapter_JNIComputation
 * Method:    compute
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_sf_prenzl_adapter_JNIComputation_compute
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_prenzl_adapter_JNIComputation
 * Method:    getCurrent
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_net_sf_prenzl_adapter_JNIComputation_getCurrent
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     net_sf_prenzl_adapter_JNIComputation
 * Method:    clean
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_sf_prenzl_adapter_JNIComputation_clean
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
